name: Backend Continuous Deployment

on:
  push:
    branches: [ "main" ]
    paths:
      - "starter/backend/**"
  workflow_dispatch:

permissions:
  contents: read

env:
  BACKEND_DIR: starter/backend
  ECR_REPO: backend
  IMAGE_TAG: ${{ github.sha }}
  ECR_IMAGE: ${{ secrets.ECR_REGISTRY }}/backend:${{ github.sha }}

defaults:
  run:
    working-directory: starter/backend

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
            python-version: "3.10"

      - name: Install pipenv and deps
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
          pipenv install --deploy --dev

      - name: Run linter
        run: pipenv run lint

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
            python-version: "3.10"

      - name: Install pipenv and deps
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
          pipenv install --deploy --dev

      - name: Run tests
        run: pipenv run test

  build_and_push:
    name: Build & Push to ECR
    runs-on: ubuntu-latest
    needs: [lint, test]            
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build Docker image
        working-directory: starter/backend
        run: |
          docker build -t "${{ env.ECR_IMAGE }}" .

      - name: Push image to ECR
        run: docker push "${{ env.ECR_IMAGE }}"

  deploy:
    name: Deploy to EKS
    runs-on: ubuntu-latest
    needs: [build_and_push]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig \
            --name "${{ secrets.EKS_CLUSTER_NAME }}" \
            --region "${{ secrets.AWS_REGION }}"

      - name: Install kustomize
        run: |
          curl -sSL https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh | bash
          sudo mv kustomize /usr/local/bin/

      - name: Set image tag in kustomize
        working-directory: starter/backend/k8s
        run: |
          kustomize edit set image backend="${{ env.ECR_IMAGE }}"

      - name: Apply manifests
        working-directory: starter/backend/k8s
        run: |
          kustomize build | kubectl apply -f -

      - name: Wait for rollout
        run: |
          kubectl rollout status deployment/backend --timeout=180s